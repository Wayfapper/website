{% extends 'base.html.twig' %}

{% block title %}Wayfapper - Karte{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="./css/leaflet.css">
    <link rel="stylesheet" href="./css/easy-button.css">
    <style>
        body {
            padding: 0;
            margin: 0;
        }
        html, body, #map {
            height: 100%;
            width: 100vw;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script src="./js/leaflet.js"></script>
    <script src="./js/easy-button.js"></script>
    <script src="./js/svg-icon.js"></script>
{% endblock %}

{% block body %}
    <div id="map"></div>
{% endblock %}

{% block javascripts_footer %}
    <script>

        var mymap = L.map('map').setView([53.548, 10.236], 13);

        function onLocationFound(e) {
            var radius = e.accuracy / 2;
            L.marker(e.latlng).addTo(map)
                .bindPopup("You are within " + radius + " meters from this point").openPopup();
            L.circle(e.latlng, radius).addTo(map);
        }

        L.easyButton({
            states:[{
                stateName: 'loaded',
                icon: '<span class="star">&#8853;</span>',
                title: 'to my location',
                onClick: function(control){
                    control.state("loading");
                    control._map.on('locationfound', function(e){
                        this.setView(e.latlng, 17);
                        var radius = e.accuracy / 2;
                        var marker = new L.Marker.SVGMarker(e.latlng).bindPopup("You are within " + Math.round(radius) + " meters from this point").openPopup();
                        if (radius >= 5)
                            L.circle(e.latlng, radius).addTo(mymap);
                        mymap.addLayer(marker);
                        control.state('loaded');
                    });
                    control._map.on('locationerror', function(){
                        control.state('error');
                    });
                    control._map.locate()
                },
            }, {
                stateName: 'loading',
                icon: '<span class="star">&telrec;</span>',
                title: 'searching',
            }, {
                stateName: 'error',
                icon: '<span class="star">&cross;</span>',
                title: 'location not found',
            }]
        }).addTo(mymap);

        L.tileLayer('{{ tile_server }}', {
            maxZoom: 19,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        }).addTo(mymap);

    </script>
{% endblock %}